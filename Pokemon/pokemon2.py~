# -*- coding: utf-8 -*-
# <nbformat>3.0</nbformat>

# <codecell>



''' 
    Ejercicio: 02 Pokemon
    Autores: Emilio Bello Villanueva y Juan Carlos de la Torre Macias
    Fecha: 17/03/2015
    Asignatura: Sistemas Distribuidos
'''


# Cargamos en memoria el contenido del fichero
archi=open('pokemon.txt','r')
datos=archi.readlines()
archi.close()


original = [] # Lista que contendr√° las palabras originales
temporal = [] # Lista que contendra la cadena que se esta analizando en cada momento
solucion = [] # Lista que contendra la cadena mas larga existente

''' Recorremos cada linea leida y, de cada linea, recogemos cada elemento
    separado por un espacio del siguiente. Si un elemento acaba en el 
    caracter fin de linea, almacenamos todo el elemento excepto dicho 
    caracter.
'''
for linea in datos:                     #Recorremos cada linea leida
    for palabra in linea.split(' '):    #Recorremos cada elemento de la linea separado por espacios
        if palabra[-1] == "\n":         #Si el elemento termina con el caracter fin de linea
            palabra = palabra[:-1]          #Eliminamos el caracter fin de linea encontrado
        original.append(palabra)        #Incluimos la palabra en la lista original

i = 0
while i < len(original):        #Iniciara la busqueda con todas las palabras de la lista original
    palabra = original[i]           #Almacenamos la primera palabra de la secuencia a buscar
    temporal.append(palabra)        #Incluimos en la secuencia la primera palabra
    j = 0
    while j < len(original):    #Recorrera toda la lista desde el inicio cada vez que annadamos una nueva palabra
        if (original[j][0] == palabra[-1]) and (original[j] not in temporal): #Si cumple la premisa y no ha sido incluida todavia
            temporal.append(original[j])    #Incluimos la palabra
            palabra = original[j]           #Pasa a ser nuestra nueva palabra cuyo ultimo caracter debemos buscar
            j=-1                            #Para buscar la siguiente palabra otra vez desde el inicio
        j=j+1                   #Seguimos recorriendo la lista en busca de la siguiente palabra
    if len(temporal)>len(solucion):     #Si la solucion parcial encontrada es mayor que la solucion almacenada la sustituimos
        solucion = temporal[:]
    temporal = []                       #Vaciamos la lista temporal
    i=i+1                               #Pasamos a la siguiente palabra de la lista original para iniciar la secuencia de nuevo
    
print "La lista mas larga encontada es: \n%s"%(solucion)

# <codecell>
